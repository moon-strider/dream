{
  "connectors": {
    "sentseg": {
      "protocol": "http",
      "timeout": 1.5,
      "url": "http://sentseg:8011/sentseg"
    }
  },
  "services": {
    "last_chance_service": {
      "connector": {
        "protocol": "python",
        "class_name": "PredefinedTextConnector",
        "response_text": "Sorry, something went wrong inside. Please tell me, what did you say.",
        "annotations": {
          "sentseg": {
            "punct_sent": "Sorry, something went wrong inside. Please tell me, what did you say.",
            "segments": [
              "Sorry, something went wrong inside.",
              "Please tell me, what did you say."
            ]
          }
        }
      },
      "state_manager_method": "add_bot_utterance_last_chance",
      "tags": [
        "last_chance"
      ]
    },
    "timeout_service": {
      "connector": {
        "protocol": "python",
        "class_name": "PredefinedTextConnector",
        "response_text": "Sorry, I need to think more on that. Let's talk about something else.",
        "annotations": {
          "sentseg": {
            "punct_sent": "Sorry, I need to think more on that. Let's talk about something else.",
            "segments": [
              "Sorry, I need to think more on that.",
              "Let's talk about something else."
            ]
          }
        }
      },
      "state_manager_method": "add_bot_utterance_last_chance",
      "tags": [
        "timeout"
      ]
    },
    "bot_annotator_selector": {
      "connector": {
        "protocol": "python",
        "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
        "annotator_names": [
          "sentseg"
        ]
      },
      "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
      "tags": [
        "selector"
      ]
    },
    "bot_utterance_annotators": {
      "sentseg": {
        "connector": "connectors.sentseg",
        "dialog_formatter": "state_formatters.dp_formatters:last_bot_utt_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "bot_annotator_selector"
        ],
        "state_manager_method": "add_annotation_prev_bot_utt"
      }
    },
    "annotators": {
      "spelling_preprocessing": {
        "connector": {
            "protocol": "http",
            "timeout": 1,
            "url": "http://spelling-preprocessing:8074/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:last_utt_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "state_manager_method": "add_annotation_and_reset_human_attributes_for_first_turn"
      },
      "sentseg": {
        "connector": "connectors.sentseg",
        "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "annotators.spelling_preprocessing"
        ],
        "state_manager_method": "add_annotation"
      },
      "badlisted_words": {
        "connector": {
          "protocol": "http",
          "timeout": 1,
          "url": "http://badlisted-words:8018/badlisted_words"
        },
        "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "annotators.spelling_preprocessing"
        ],
        "state_manager_method": "add_annotation"
      },
      "intent_catcher": {
        "connector": {
          "protocol": "http",
          "timeout": 1,
          "url": "http://intent-catcher:8014/detect"
        },
        "dialog_formatter": "state_formatters.dp_formatters:last_utt_sentseg_segments_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "state_manager_method": "add_annotation",
        "previous_services": [
          "annotators.spelling_preprocessing",
          "annotators.sentseg"
        ]
      },
      "relative_persona_extractor": {
        "connector": {
          "protocol": "http",
          "timeout": 2,
          "url": "http://relative-persona-extractor:8133/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:context_formatter_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "state_manager_method": "add_annotation",
        "previous_services": [
          "annotators.spelling_preprocessing"
        ]
      },
      "midas_classification": {
        "connector": {
          "protocol": "http",
          "timeout": 1,
          "url": "http://midas-classification:8090/model"
        },
        "dialog_formatter": "state_formatters.dp_formatters:utt_sentseg_punct_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "annotators.spelling_preprocessing",
          "annotators.sentseg"
        ],
        "state_manager_method": "add_annotation"
      }
    },
    "skill_selectors": {
      "rule_based_selector": {
        "connector": {
          "protocol": "python",
          "class_name": "skill_selectors.rule_based_selector.connector:RuleBasedSkillSelectorConnector"
        },
        "dialog_formatter": "state_formatters.dp_formatters:base_skill_selector_formatter_dialog",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "annotators"
        ],
        "tags": [
          "selector"
        ]
      }
    },
    "skills": {
      "dff_intent_responder_skill": {
        "connector": {
          "protocol": "http",
          "timeout": 2,
          "url": "http://dff-intent-responder-skill:8012/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:dff_intent_responder_skill_formatter",
        "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
        "previous_services": [
          "skill_selectors"
        ],
        "state_manager_method": "add_hypothesis"
      },
      "dummy_skill": {
        "connector": {
          "protocol": "python",
          "class_name": "skills.dummy_skill.connector:DummySkillConnector"
        },
        "dialog_formatter": "state_formatters.dp_formatters:utt_sentrewrite_modified_last_dialog",
        "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
        "previous_services": [
          "skill_selectors"
        ],
        "state_manager_method": "add_hypothesis"
      },
      "dialogpt": {
        "connector": {
          "protocol": "http",
          "timeout": 3,
          "url": "http://dialogpt:8125/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:last_utt_and_history_dialog",
        "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
        "previous_services": [
          "skill_selectors"
        ],
        "state_manager_method": "add_hypothesis"
      },
      "dialogpt_persona_based": {
        "connector": {
          "protocol": "http",
          "timeout": 3,
          "url": "http://dialogpt-persona-based:8131/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:persona_bot_formatter",
        "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
        "previous_services": [
          "skill_selectors"
        ],
        "state_manager_method": "add_hypothesis"
      }
    },
    "candidate_annotators": {
      "badlisted_words": {
        "connector": {
          "protocol": "http",
          "timeout": 1,
          "url": "http://badlisted-words:8018/badlisted_words_batch"
        },
        "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "skills"
        ],
        "state_manager_method": "add_hypothesis_annotation_batch"
      },
      "sentence_ranker": {
        "connector": {
          "protocol": "http",
          "timeout": 1,
          "url": "http://sentence-ranker:8128/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:sentence_ranker_formatter",
        "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
        "previous_services": [
          "skills"
        ],
        "state_manager_method": "add_hypothesis_annotation_batch"
      }
    },
    "response_selectors": {
      "convers_evaluation_selector": {
        "connector": {
          "protocol": "http",
          "timeout": 1,
          "url": "http://convers-evaluation-selector:8009/respond"
        },
        "dialog_formatter": "state_formatters.dp_formatters:full_history_dialog",
        "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
        "previous_services": [
          "candidate_annotators"
        ],
        "state_manager_method": "add_bot_utterance"
      }
    }
  },
  "metadata": {
    "display_name": "Dream Mini Persona-based",
    "author": "DeepPavlov",
    "description": "Persona Based mini version of DeepPavlov Dream Socialbot. This is a generative-based socialbot that uses English DialoGPT model to generate most of the responses. It also contains intent catcher and responder components to cover special user requests.",
    "version": "0.1.0",
    "date_created": "2022-12-12T12:12:00",
    "ram_usage": "50 GB",
    "gpu_usage": "50 GB",
    "disk_usage": "50 GB"
  }
}
