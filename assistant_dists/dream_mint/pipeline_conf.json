{
    "connectors": {
        "sentseg": {
            "protocol": "http",
            "timeout": 1.5,
            "url": "http://sentseg:8011/sentseg"
        },
        "ner": {
            "protocol": "http",
            "timeout": 1.5,
            "url": "http://ner:8021/ner"
        }
    },
    "services": {
        "last_chance_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, something went wrong inside. Please tell me, what did you say.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Sorry, something went wrong inside. Please tell me, what did you say.",
                        "segments": [
                            "Sorry, something went wrong inside.",
                            "Please tell me, what did you say."
                        ]
                    }
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ],
            "is_enabled": true,
            "source": {
                "directory": "services/last_chance_service",
                "container": "agent"
            }
        },
        "timeout_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, I need to think more on that. Let's talk about something else.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Sorry, I need to think more on that. Let's talk about something else.",
                        "segments": [
                            "Sorry, I need to think more on that.",
                            "Let's talk about something else."
                        ]
                    }
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "timeout"
            ],
            "is_enabled": true,
            "source": {
                "directory": "services/timeout_service",
                "container": "agent"
            }
        },
        "annotators": {
            "mint_status": {
                "connector": {
                    "protocol": "http",
                    "timeout": 10,
                    "url": "http://mint-status:8340/check"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_non_punct_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "state_manager_method": "update_attributes"
            },
            "sentseg": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://sentseg:8011/sentseg"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/SentSeg",
                    "container": "sentseg",
                    "endpoint": "sentseg"
                }
            },
            "badlisted_words": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://badlisted-words:8018/badlisted_words"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/BadlistedWordsDetector",
                    "container": "badlisted-words",
                    "endpoint": "badlisted_words"
                }
            },
            "intent_catcher": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://intent-catcher-commands:8014/detect"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_sentseg_segments_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/IntentCatcherTransformers",
                    "container": "intent-catcher-commands",
                    "endpoint": "detect"
                }
            },
            "ner": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://ner:8021/ner"
                },
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/NER_deeppavlov",
                    "container": "ner",
                    "endpoint": "ner"
                }
            },
            "entity_detection": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-detection:8103/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:entity_detection_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/entity_detection",
                    "container": "entity-detection",
                    "endpoint": "respond"
                }
            }
        },
        "response_annotators": {
            "ner": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://ner:8021/ner"
                },
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_last_bot_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_annotator_selectors",
                    "response_annotators.sentseg"
                ],
                "state_manager_method": "add_annotation_prev_bot_utt",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/NER_deeppavlov",
                    "container": "ner",
                    "endpoint": "ner"
                }
            }
        },
        "response_annotator_selectors": {
            "connector": {
                "protocol": "python",
                "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
                "annotator_names": [
                    "sentseg",
                    "ner"
                ]
            },
            "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
            "tags": [
                "selector"
            ],
            "is_enabled": true,
            "source": {
                "directory": "services/response_annotator_selectors",
                "container": "agent"
            }
        },
        "candidate_annotators": {
            "badlisted_words": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://badlisted-words:8018/badlisted_words_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "directory": "annotators/BadlistedWordsDetector",
                    "container": "badlisted-words",
                    "endpoint": "badlisted_words_batch"
                }
            },
            "sentence_ranker": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://sentence-ranker:8128/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:sentence_ranker_formatter",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/XGwmAHtAOu0NDqqG3QCJw.yml",
                    "service": "services/sentence_ranker/service_configs/sentence-ranker"
                }
            }
        },
        "skill_selectors": {
            "rule_based_selector": {
                "connector": {
                    "protocol": "python",
                    "class_name": "skill_selectors.rule_based_selector.connector:RuleBasedSkillSelectorConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:base_skill_selector_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators"
                ],
                "tags": [
                    "selector"
                ],
                "is_enabled": true,
                "source": {
                    "directory": "skill_selectors/rule_based_selector",
                    "container": "agent"
                }
            }
        },
        "skills": {
            "dff_program_y_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-program-y-skill:8008/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_program_y_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "directory": "skills/dff_program_y_skill",
                    "container": "dff-program-y-skill",
                    "endpoint": "respond"
                }
            },
            "dff_mint_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-mint-skill:8337/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_intent_responder_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "directory": "skills/dff_mint_skill",
                    "container": "dff-mint-skill",
                    "endpoint": "respond"
                }
            },
            "dummy_skill": {
                "connector": {
                    "protocol": "python",
                    "class_name": "skills.dummy_skill.connector:DummySkillConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_sentrewrite_modified_last_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "directory": "skills/dummy_skill",
                    "container": "agent"
                }
            },
            "dialogpt": {
                "connector": {
                    "protocol": "http",
                    "timeout": 3.0,
                    "url": "http://dialogpt:8125/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_and_history_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "directory": "services/dialogpt",
                    "container": "dialogpt",
                    "endpoint": "respond"
                }
            }
        },
        "response_selectors": {
            "response_selector": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://ranking-based-response-selector:8002/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:cropped_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
                "previous_services": [
                    "candidate_annotators"
                ],
                "state_manager_method": "add_bot_utterance",
                "is_enabled": true,
                "source": {
                    "component": "components/YJzc7NwGrLmKp6gfZJh7X1.yml",
                    "service": "response_selectors/ranking_based_response_selector/service_configs/ranking-based-response-selector"
                }
            }
        },
        "actors": {
            "mint_sender": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://mint-sender:8338/send"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_human_bot_annotated_utterance",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_selectors"
                ],
                "state_manager_method": "update_attributes"
            }
        }
    },
    "metadata": {
        "display_name": "Dream Mint",
        "author": "DeepPavlov",
        "description": "Mint version of DeepPavlov Dream Socialbot",
        "version": "0.1.0",
        "date_created": "2022-12-12T12:12:00",
        "ram_usage": "50 GB",
        "gpu_usage": "50 GB",
        "disk_usage": "50 GB"
    }
}