{
    "services": {
        "last_chance_service": {
            "group": "last_chance_service",
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, something went wrong inside. Please tell me, what did you say.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Sorry, something went wrong inside. Please tell me, what did you say.",
                        "segments": [
                            "Sorry, something went wrong inside.",
                            "Please tell me, what did you say."
                        ]
                    }
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ],
            "endpoint": "respond",
            "is_enabled": true,
            "source": {
                "component": "components\\70NLr5qqOow5.yml",
                "service": "services\\agent_services\\service_configs\\ai_faq_assistant"
            }
        },
        "timeout_service": {
            "group": "last_chance_service",
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, something went wrong inside. Please tell me, what did you say.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Sorry, something went wrong inside. Please tell me, what did you say.",
                        "segments": [
                            "Sorry, something went wrong inside.",
                            "Please tell me, what did you say."
                        ]
                    }
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ],
            "endpoint": "respond",
            "is_enabled": true,
            "source": {
                "component": "components\\x8rLTpIWct4P.yml",
                "service": "services\\agent_services\\service_configs\\ai_faq_assistant"
            }
        },
        "annotators": {
            "mint_status": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://mint-status:8340/check"
                },
                "endpoint": "check",
                "is_enabled": true,
                "source": {
                    "component": "components\\Pnfwoei382fn02nv20vnvVN.yml",
                    "service": "annotators\\mint_status\\service_configs\\mint_status"
                }
            },
            "sentseg": {
                "group": "annotators",
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://sentseg:8011/sentseg"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "state_manager_method": "add_annotation",
                "endpoint": "sentseg",
                "is_enabled": true,
                "source": {
                    "component": "components\\gM4fEjvVqLlSRRRkQfds2g.yml",
                    "service": "annotators\\SentSeg\\service_configs\\sentseg"
                }
            }
        },
        "response_annotators": {
            "ner": {
                "group": "response_annotators",
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://ner:8021/ner"
                },
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_last_bot_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_annotator_selectors",
                    "response_annotators.sentseg"
                ],
                "state_manager_method": "add_annotation_prev_bot_utt",
                "endpoint": "ner",
                "is_enabled": true,
                "source": {
                    "component": "components\\iBC0L15gOFWymHhZEAybUQ.yml",
                    "service": "annotators\\NER_deeppavlov\\service_configs\\ner"
                }
            }
        },
        "response_annotator_selectors": {
            "group": "response_annotator_selectors",
            "connector": {
                "protocol": "python",
                "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
                "annotator_names": [
                    "sentseg"
                ]
            },
            "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
            "tags": [
                "selector"
            ],
            "is_enabled": true,
            "source": {
                "component": "components\\LXrJDIf43gwNmPMNXG5Eg.yml",
                "service": "services\\response_annotator_selectors\\service_configs\\agent"
            }
        },
        "candidate_annotators": {},
        "skill_selectors": {
            "rule_based_selector": {
                "group": "skill_selectors",
                "connector": {
                    "protocol": "python",
                    "class_name": "skill_selectors.rule_based_selector.connector:RuleBasedSkillSelectorConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:base_skill_selector_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators"
                ],
                "tags": [
                    "selector"
                ],
                "endpoint": "respond",
                "is_enabled": true,
                "source": {
                    "component": "components\\xSwFvtAUdvtQosvzpb7oMg.yml",
                    "service": "skill_selectors\\rule_based_selector\\service_configs\\agent"
                }
            }
        },
        "skills": {
            "dff_mint_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://dff-mint-skill:8337/respond"
                },
                "previous_services": [
                    "mint_status",
                    "ros_flask_server"
                ],
                "required_previous_services": [
                    "mint_status"
                ],
                "endpoint": "respond",
                "is_enabled": true,
                "source": {
                    "component": "components\\Ofjpqo2f9j2NFKknf9.yml",
                    "service": "skills\\dff_mint_skill\\service_configs\\dff_mint_skill"
                }
            }
        },
        "response_selectors": {
            "response_selector": {
                "group": "response_selectors",
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://ranking-based-response-selector:8002/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:cropped_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
                "previous_services": [
                    "candidate_annotators"
                ],
                "state_manager_method": "add_bot_utterance",
                "endpoint": "respond",
                "is_enabled": true,
                "source": {
                    "component": "components\\YJzc7NwGrLmKp6gfZJh7X1.yml",
                    "service": "response_selectors\\ranking_based_response_selector\\service_configs\\ranking-based-response-selector"
                }
            }
        }
    },
    "metadata": {
        "display_name": "Dream Mint",
        "author": "deepypavlova@email.org",
        "description": "Embodied ai distribution",
        "date_created": "2023-07-20T12:31:50"
    }
}