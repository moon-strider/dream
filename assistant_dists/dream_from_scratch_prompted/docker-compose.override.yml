services:
  agent:
    command: sh -c 'bin/wait && python -m deeppavlov_agent.run agent.pipeline_config=assistant_dists/dream_from_scratch_prompted/pipeline_conf.json agent.channel=$AGENT_CHANNEL'
    environment:
      WAIT_HOSTS: "llm-based-response-selector:8003, combined-classification:8087, 
         sentence-ranker:8128, prompt-selector:8135, llm-based-skill-selector:8182, openai-api-chatgpt:8145,
         dff-dream-persona-chatgpt-prompted-skill:8137"
      WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-1000}
      LANGUAGE: EN
      FALLBACK_FILE: fallbacks_dream_en.json

  combined-classification:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8087
        SERVICE_NAME: combined_classification
        CONFIG: combined_classifier.json
      context: .
      dockerfile: ./annotators/combined_classification/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8087 --timeout 600
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G

  llm-based-skill-selector:
    env_file: [ .env,.env_secret ]
    build:
      args:
        SERVICE_PORT: 8182
        SERVICE_NAME: skill_selector
        GENERATIVE_SERVICE_URL: http://openai-api-chatgpt:8145/respond
        GENERATIVE_SERVICE_CONFIG: openai-chatgpt-short.json
        GENERATIVE_TIMEOUT: 10
        N_UTTERANCES_CONTEXT: 3
        N_TURNS_TO_KEEP_DOC: 5
        PROMPT_FILE: common/prompts/skill_selector.json
        MAX_N_SKILLS: 3
      context: .
      dockerfile: ./skill_selectors/llm_based_skill_selector/Dockerfile
    command: flask run -h 0.0.0.0 -p 8182
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M

  llm-based-response-selector:
    env_file: [ .env,.env_secret ]
    build:
      args:
        SERVICE_PORT: 8003
        SERVICE_NAME: response_selector
        LANGUAGE: EN
        GENERATIVE_SERVICE_URL: http://openai-api-chatgpt:8145/respond
        GENERATIVE_SERVICE_CONFIG: openai-chatgpt-long.json
        GENERATIVE_TIMEOUT: 120
        N_UTTERANCES_CONTEXT: 1
        FILTER_TOXIC_OR_BADLISTED: 0
        PROMPT_FILE: common/prompts/response_selector.json
      context: .
      dockerfile: ./response_selectors/llm_based_response_selector/Dockerfile
    command: flask run -h 0.0.0.0 -p 8003
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M

  prompt-selector:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8135
        SERVICE_NAME: prompt_selector
        SENTENCE_RANKER_SERVICE_URL: http://sentence-ranker:8128/respond
        N_SENTENCES_TO_RETURN: 3
      context: .
      dockerfile: ./annotators/prompt_selector/Dockerfile
    command: flask run -h 0.0.0.0 -p 8135
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M

  sentence-ranker:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8128
        SERVICE_NAME: sentence_ranker
        PRETRAINED_MODEL_NAME_OR_PATH: sentence-transformers/all-MiniLM-L6-v2
      context: ./services/sentence_ranker/
    command: flask run -h 0.0.0.0 -p 8128
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 3G

  openai-api-chatgpt:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8145
        SERVICE_NAME: openai_api_chatgpt
        PRETRAINED_MODEL_NAME_OR_PATH: gpt-3.5-turbo
      context: .
      dockerfile: ./services/openai_api_lm/Dockerfile
    command: flask run -h 0.0.0.0 -p 8145
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 100M

  dff-dream-persona-chatgpt-prompted-skill:
    env_file: [ .env,.env_secret ]
    build:
      args:
        SERVICE_PORT: 8137
        SERVICE_NAME: dff_dream_persona_prompted_skill
        PROMPT_FILE: common/prompts/dream_persona.json
        GENERATIVE_SERVICE_URL: http://openai-api-chatgpt:8145/respond
        GENERATIVE_SERVICE_CONFIG: openai-chatgpt.json
        GENERATIVE_TIMEOUT: 120
        N_UTTERANCES_CONTEXT: 7
      context: .
      dockerfile: ./skills/dff_template_prompted_skill/Dockerfile
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 128M

version: '3.7'
